{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","todo","id","isEditting","modalOpen","isCompleted","handleChange","bind","handleSubmit","modalHide","evt","this","setState","target","name","value","preventDefault","newTodo","uuidv4","addTodo","className","onSubmit","method","htmlFor","type","placeholder","onChange","required","autoFocus","style","marginRight","onClick","href","Component","Todo","edittedTodo","isHovering","renderTodo","handleEdit","handleComplete","optionHover","editTodo","submitEdit","markAsComplete","st","onMouseEnter","onMouseLeave","checked","removeTodo","TodoList","todos","key","localStorage","length","storedNames","JSON","parse","getItem","setItem","stringify","filter","removeItem","prevState","map","el","newTodoStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8625e5b7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport \"../node_modules/nes.css/css/nes.css\"\r\nimport './css/NewTodoForm.css'\r\n\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            todo: \"\" ,\r\n            id: \"\", \r\n            isEditting: false,\r\n            modalOpen: false,\r\n            isCompleted: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.modalOpen = this.modalOpen.bind(this);\r\n        this.modalHide = this.modalHide.bind(this);\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name] : evt.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault()\r\n        const newTodo = {...this.state, id : uuidv4()}\r\n        this.props.addTodo(newTodo)\r\n        this.setState({\r\n            todo: \"\" ,id: \"\", modalOpen: false\r\n        })\r\n    }\r\n\r\n    modalOpen(){\r\n        if(!this.state.modalOpen){\r\n            this.setState({\r\n                modalOpen: true\r\n            })\r\n        }\r\n    }\r\n\r\n    modalHide(){\r\n        if(this.state.modalOpen){\r\n            this.setState({\r\n                modalOpen: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NewTodoForm\">\r\n                <section className=\"NewTodoForm-modal\">\r\n                    {this.state.modalOpen ? \r\n                        <dialog className=\"nes-dialog is-rounded\" id=\"dialog-rounded\" >\r\n                            <form onSubmit={this.handleSubmit} method=\"dialog\">\r\n                                <div className=\"nes-field\">\r\n                                    <label htmlFor=\"todo_form\" className=\"nes-text\"> -- New Todo -- </label>\r\n                                    <input \r\n                                    id=\"todo_form\"\r\n                                    className=\"nes-input\"\r\n                                    type=\"text\"\r\n                                    name=\"todo\"\r\n                                    placeholder=\"What will you do ?\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.todo}\r\n                                    required\r\n                                    autoFocus\r\n                                    />\r\n                                </div>\r\n                                <button className=\"nes-btn is-error\" style={{marginRight: '1rem'}} >Create Todo</button>\r\n                                <button className=\"nes-btn is-success\" onClick={this.modalHide}>Cancel</button>\r\n                            </form>\r\n                        </dialog> : '' }\r\n                </section>\r\n                <button href=\"#\" className=\"float nes-btn is-success\" onClick={this.modalOpen}>\r\n                    New Todo +\r\n                    {/* <i className=\"fa fa-plus my-float\"></i> */}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTodoForm;","import React, { Component } from 'react'\r\nimport \"../node_modules/nes.css/css/nes.css\"\r\nimport './css/Todo.css'\r\n\r\nclass Todo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { edittedTodo: \"\", isHovering:false}; \r\n        this.renderTodo = this.renderTodo.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleEdit = this.handleEdit.bind(this)\r\n        this.handleComplete = this.handleComplete.bind(this)\r\n        this.optionHover = this.optionHover.bind(this)\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name] : evt.target.value\r\n        })\r\n    }\r\n\r\n    handleEdit(evt){\r\n        evt.preventDefault();\r\n        this.props.editTodo(this.props.id)\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault()\r\n        this.props.submitEdit(this.props.id, this.state.edittedTodo)\r\n        // this.setState({\r\n        //     todo: \"\" ,id: \"\"\r\n        // })\r\n    }\r\n\r\n    handleComplete(evt){\r\n        evt.preventDefault();\r\n        this.props.markAsComplete(this.props.id)\r\n    }\r\n\r\n    optionHover(){\r\n        this.setState(st => ({\r\n            isHovering: !st.isHovering\r\n        }))\r\n    }\r\n\r\n    renderTodo(){\r\n        if(!this.props.isEditting){\r\n            return(\r\n                <div className=\"Todo-item\">\r\n                    <p className={this.props.isCompleted ? \"Todo-title crossline\" : 'Todo-title'} > {this.props.todo}</p>\r\n                    <div className=\"Todo-btns\">\r\n                        <label className=\"dd\"  onMouseEnter={this.optionHover} onMouseLeave={this.optionHover}>\r\n                            <div className=\"dd-button\">\r\n                                <i className=\"nes-icon coin is-medium\"></i>\r\n                            </div>\r\n                            {this.state.isHovering ? <input type=\"checkbox\" className=\"dd-input\" checked/> : <input type=\"checkbox\" className=\"dd-input\"/>}\r\n                            <div className=\"dd-menu nes-container with-title\">\r\n                                <p className=\"\" onClick={this.handleComplete}>Mark As Completed</p>\r\n                                <p className=\"\" onClick={this.handleEdit}>Edit</p>\r\n                                <p className=\"\" onClick={this.props.removeTodo}>Delete</p>\r\n                            </div>\r\n                        </label>\r\n                            \r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n               \r\n            )\r\n        } else {\r\n            return(\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"edittedTodo\"\r\n                    value={this.state.edittedTodo}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    autoFocus\r\n                    />\r\n                    <button>Save</button>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Todo\">\r\n               \r\n                 {this.renderTodo()}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react'\r\n\r\nimport NewTodoForm from './NewTodoForm';\r\nimport Todo from './Todo';\r\nimport \"../node_modules/nes.css/css/nes.css\"\r\nimport './css/TodoList.css'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { todos: [] };\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.renderTodo = this.renderTodo.bind(this);\r\n        this.removeTodo = this.removeTodo.bind(this);\r\n        this.editTodo = this.editTodo.bind(this);\r\n        this.submitEdit = this.submitEdit.bind(this);\r\n        this.markAsComplete = this.markAsComplete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        for (var key in localStorage){\r\n            if(key.length > 10) {\r\n                let storedNames = JSON.parse(localStorage.getItem(key));\r\n                if (storedNames != null) {\r\n                    this.setState(st => ({\r\n                        todos: [...st.todos, storedNames]\r\n                    }))\r\n                    // console.log('test')\r\n                }\r\n                // console.log(storedNames)\r\n            }\r\n         }\r\n\r\n    }\r\n\r\n    addTodo(todo){\r\n        this.setState(st => ({\r\n            todos: [...st.todos, todo]\r\n        }))\r\n        localStorage.setItem(todo.id, JSON.stringify(todo));\r\n    }\r\n\r\n    removeTodo(id){\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => todo.id !== id)\r\n        })\r\n        for (var key in localStorage){\r\n            if(key.length > 10 && key === id) {\r\n                localStorage.removeItem(key);\r\n            }\r\n         }\r\n    }\r\n\r\n    editTodo(id){\r\n        this.setState(prevState => ({\r\n            todos: prevState.todos.map(\r\n              el => el.id === id? { ...el, isEditting: true}: el\r\n            )\r\n        }))\r\n    }\r\n\r\n    submitEdit(id, newTodo){\r\n        this.setState(prevState => ({\r\n            todos: prevState.todos.map(\r\n              el => el.id === id? { ...el, todo: newTodo, isEditting: false}: el\r\n            )\r\n        }))\r\n\r\n        let newTodoStore = this.state.todos.map(\r\n            el => el.id === id? { ...el, todo: newTodo, isEditting: false}: el\r\n        )\r\n        localStorage.setItem(id, JSON.stringify(...newTodoStore));\r\n    }\r\n\r\n    markAsComplete(id){\r\n        this.setState(prevState => ({\r\n            todos: prevState.todos.map(\r\n              el => el.id === id && el.isCompleted === false ? { ...el, isCompleted: true } : \r\n              el.id === id && el.isCompleted === true ? {...el, isCompleted: false} : el\r\n            )\r\n        }))\r\n        // console.log(id)\r\n    }\r\n\r\n    renderTodo(){\r\n        return(\r\n            <div>\r\n                {this.state.todos.map(todo => (\r\n                    <Todo \r\n                    key={todo.id} \r\n                    id={todo.id} \r\n                    todo={todo.todo}\r\n                    isEditting={todo.isEditting}\r\n                    isCompleted={todo.isCompleted}\r\n                    removeTodo={() => this.removeTodo(todo.id)} \r\n                    editTodo={this.editTodo} \r\n                    submitEdit={this.submitEdit}\r\n                    markAsComplete={this.markAsComplete}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"TodoList\">\r\n                <NewTodoForm addTodo={this.addTodo}/>\r\n                <div className=\"nes-container is-rounded with-title\">\r\n                    <p className=\"title\">YOUR QUEST!</p>\r\n                    {this.renderTodo()}\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import './css/App.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <TodoList />\n        {/* <NewTodoForm addTodo={this.addTodo}/> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}